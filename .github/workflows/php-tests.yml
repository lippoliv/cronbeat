name: PHP Tests

on:
  push:
    paths:
      - '**.php'
      - 'composer.json'
      - 'composer.lock'
      - 'phpunit.xml'
      - '.github/workflows/php-tests.yml'
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: xdebug

      - name: Lint PHP files
        run: |
          echo "Linting PHP files..."
          find src -name "*.php" -print0 | xargs -0 -n1 php -l
          if [ $? -ne 0 ]; then
            echo "PHP linting failed!"
            exit 1
          fi
          echo "All PHP files passed linting!"

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Check type annotations with PHPStan
        run: |
          echo "Checking type annotations..."
          vendor/bin/phpstan analyse --error-format=table --no-progress
          if [ $? -ne 0 ]; then
            echo "PHPStan type checking failed!"
            exit 1
          fi
          echo "All type annotations are correct!"

      - name: Check for unused functions and variables with PHP_CodeSniffer
        run: |
          echo "Checking for unused functions and variables..."
          vendor/bin/phpcs --standard=phpcs.xml
          if [ $? -ne 0 ]; then
            echo "PHP_CodeSniffer found unused functions or variables!"
            exit 1
          fi
          echo "No unused functions or variables found!"

      - name: Run test suite
        run: vendor/bin/phpunit --testdox

      - name: Test Summary
        if: always()
        uses: test-summary/action@v2
        with:
          paths: "tests/results/junit.xml"
          show: "all"
